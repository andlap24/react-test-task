{"version":3,"sources":["api/api.js","components/Gallery/Gallery.jsx","images/close-button.svg","components/CommentsList/CommentsList.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","getComments","imageId","fetch","then","response","ok","json","Error","status","statusText","Gallery","images","handleImage","className","map","image","role","onClick","image_id","tabIndex","onKeyPress","src","alt","CommentsList","comments","comment","name","description","Modal","modalImage","setModalWindow","React","useState","userName","setUserName","setDescription","button","type","value","onChange","event","target","addUserName","placeholder","addDescription","App","setImages","setComments","setModalImage","modalWindow","useEffect","imagesFromServer","commentsFromServer","getModalImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAMA,G,MAAW,oCAgBV,SAASC,EAAYC,GAC1B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qBAAyBE,IAClCE,MAAK,SAAAC,GAAQ,OAAMA,EAASC,GAEzBD,EAASE,OADT,IAAIC,MAAJ,UAAaH,EAASI,OAAtB,cAAkCJ,EAASK,gB,UCdtCC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,YAAX,OACrB,qBAAKC,UAAU,uBAAf,SACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,qBACEF,UAAU,eAEVG,KAAK,SACLC,QAAS,kBAAML,EAAYG,EAAMG,WACjCC,SAAU,EACVC,WAAY,kBAAMR,EAAYG,EAAMG,WANtC,SAQE,qBACEL,UAAU,iBACVQ,IAAKN,EAAMM,IACXC,IAAI,eATDP,EAAMG,gBCVJ,G,MAAA,IAA0B,0C,MCKlC,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC7B,OACE,qBAAKX,UAAU,2BAAf,SACG,CAACW,GAAUV,KAAI,SAAAW,GAAO,OACrB,qCACE,mBAAGZ,UAAU,oBAAb,SAAkCY,EAAQC,OAC1C,mBAAGb,UAAU,mBAAb,SAAiCY,EAAQE,sBCH5C,SAASC,EAAT,GAA0D,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,eAAgBN,EAAY,EAAZA,SAAY,EAC9BO,IAAMC,SAAS,IADe,mBACvDC,EADuD,KAC7CC,EAD6C,OAExBH,IAAMC,SAAS,IAFS,mBAEvDL,EAFuD,KAE1CQ,EAF0C,KAO9D,OACE,qCACE,qBAAKtB,UAAU,uBACf,sBAAKA,UAAU,mBAAf,UACE,qBACEA,UAAU,sBACVG,KAAK,SACLC,QAAS,kBAAMa,GAAe,IAC9BX,SAAS,IACTC,WAAY,kBAAMU,GAAe,IALnC,SAOE,qBACET,IAAKe,EACLd,IAAI,mBAIR,uBAAMT,UAAU,mBAAhB,UACE,qBACEA,UAAU,cACVQ,IAAKQ,EACLP,IAAI,KAGN,gCACE,uBACET,UAAU,cACVwB,KAAK,OACLC,MAAOL,EACPM,SAAU,SAAAC,GAAK,OAhCP,SAAAA,GAAK,OAAIN,EAAYM,EAAMC,OAAOH,OAgCvBI,CAAYF,IAC/BG,YAAY,kDAIhB,gCACE,uBACE9B,UAAU,cACVwB,KAAK,OACLC,MAAOX,EACPY,SAAU,SAAAC,GAAK,OAzCJ,SAAAA,GAAK,OAAIL,EAAeK,EAAMC,OAAOH,OAyC7BM,CAAeJ,IAClCG,YAAY,4FAIhB,wBACE9B,UAAU,YACVwB,KAAK,SAFP,oIAOF,cAAC,EAAD,CAAcb,SAAUA,UCPjBqB,MAnDf,WAAgB,IAAD,EACed,IAAMC,SAAS,IAD9B,mBACNrB,EADM,KACEmC,EADF,OAEmBf,IAAMC,SAAS,IAFlC,mBAENR,EAFM,KAEIuB,EAFJ,OAGuBhB,IAAMC,SAAS,IAHtC,mBAGNH,EAHM,KAGMmB,EAHN,OAIyBjB,IAAMC,UAAS,GAJxC,mBAINiB,EAJM,KAIOnB,EAJP,KAwBb,OAlBAoB,qBAAU,WLXHhD,MAAM,GAAD,OAAIH,EAAJ,aACTI,MAAK,SAAAC,GAAQ,OAAMA,EAASC,GAEzBD,EAASE,OADT,IAAIC,MAAJ,UAAaH,EAASI,OAAtB,cAAkCJ,EAASK,gBKUnCN,MAAK,SAACgD,GAChBL,EAAUK,QAEX,IAeD,qCACE,sBAAKtC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,cAAC,EAAD,CACEF,OAAQA,EACRC,YAlBY,SAACX,GACnBD,EAAYC,GAASE,MAAK,SAACiD,GACzBL,EAAYK,MLbX,SAAuBnD,GAC5B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,mBAAuBE,IAChCE,MAAK,SAAAC,GAAQ,OAAMA,EAASC,GAEzBD,EAASE,OADT,IAAIC,MAAJ,UAAaH,EAASI,OAAtB,cAAkCJ,EAASK,gBKa/C4C,CAAcpD,GAASE,MAAK,SAACY,GAC3BiC,EAAcjC,EAAMM,QAGtBS,GAAe,MAYVmB,GACC,cAAC,EAAD,CACEpB,WAAYA,EACZC,eAAgBA,EAChB9B,YAAaA,EACbwB,SAAUA,OAKhB,yBAAQX,UAAU,qBAAlB,UACE,qBAAKA,UAAU,iBACf,mBAAGA,UAAU,eAAb,mCCzCOyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.529e1a6e.chunk.js","sourcesContent":["const BASE_URL = 'https://tzfrontend.herokuapp.com';\n\nexport function getImages() {\n  return fetch(`${BASE_URL}/images/`)\n    .then(response => (!response.ok\n      ? new Error(`${response.status} - ${response.statusText}`)\n      : response.json()));\n}\n\nexport function getModalImage(imageId) {\n  return fetch(`${BASE_URL}/images/${imageId}`)\n    .then(response => (!response.ok\n      ? new Error(`${response.status} - ${response.statusText}`)\n      : response.json()));\n}\n\nexport function getComments(imageId) {\n  return fetch(`${BASE_URL}/comments/${imageId}`)\n    .then(response => (!response.ok\n      ? new Error(`${response.status} - ${response.statusText}`)\n      : response.json()));\n}\n\nexport function updateCommentList(newComment) {\n  return fetch(`${BASE_URL}/comments/add`, {\n    method: 'post',\n    body: JSON.stringify(newComment),\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Gallery.css';\n\nexport const Gallery = ({ images, handleImage }) => (\n  <div className=\"App__gallery gallery\">\n    {images.map(image => (\n      <div\n        className=\"gallery__btn\"\n        key={image.image_id}\n        role=\"button\"\n        onClick={() => handleImage(image.image_id)}\n        tabIndex={0}\n        onKeyPress={() => handleImage(image.image_id)}\n      >\n        <img\n          className=\"gallery__image\"\n          src={image.src}\n          alt=\"landscape\"\n        />\n      </div>\n    ))}\n  </div>\n);\n\nGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  handleImage: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/close-button.63feaaed.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CommentsList.css';\n\nexport function CommentsList({ comments }) {\n  return (\n    <div className=\"modal__comments comments\">\n      {[comments].map(comment => (\n        <>\n          <p className=\"comment__userName\">{comment.name}</p>\n          <p className=\"comment__comment\">{comment.description}</p>\n        </>\n      ))}\n    </div>\n  );\n}\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\nimport button from '../../images/close-button.svg';\n\nimport { CommentsList } from '../CommentsList';\n\nexport function Modal({ modalImage, setModalWindow, comments }) {\n  const [userName, setUserName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const addUserName = event => setUserName(event.target.value);\n  const addDescription = event => setDescription(event.target.value);\n\n  return (\n    <>\n      <div className=\"App__modal-overlay\" />\n      <div className=\"App__modal modal\">\n        <div\n          className=\"modal__close-button\"\n          role=\"button\"\n          onClick={() => setModalWindow(false)}\n          tabIndex=\"0\"\n          onKeyPress={() => setModalWindow(false)}\n        >\n          <img\n            src={button}\n            alt=\"close button\"\n          />\n        </div>\n\n        <form className=\"modal__form form\">\n          <img\n            className=\"form__image\"\n            src={modalImage}\n            alt=\"\"\n          />\n\n          <label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              value={userName}\n              onChange={event => addUserName(event)}\n              placeholder=\"Ваше имя\"\n            />\n          </label>\n\n          <label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              value={description}\n              onChange={event => addDescription(event)}\n              placeholder=\"Ваш комментарий\"\n            />\n          </label>\n\n          <button\n            className=\"form__btn\"\n            type=\"button\"\n          >\n            Оставить комментарий\n          </button>\n        </form>\n        <CommentsList comments={comments} />\n      </div>\n    </>\n  );\n}\n\nModal.propTypes = {\n  modalImage: PropTypes.string.isRequired,\n  setModalWindow: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport { getModalImage, getImages, getComments } from './api/api';\n\nimport { Gallery } from './components/Gallery';\nimport { Modal } from './components/Modal';\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [modalImage, setModalImage] = React.useState('');\n  const [modalWindow, setModalWindow] = React.useState(false);\n\n  useEffect(() => {\n    getImages().then((imagesFromServer) => {\n      setImages(imagesFromServer);\n    });\n  }, []);\n\n  const handleImage = (imageId) => {\n    getComments(imageId).then((commentsFromServer) => {\n      setComments(commentsFromServer);\n    });\n\n    getModalImage(imageId).then((image) => {\n      setModalImage(image.src);\n    });\n\n    setModalWindow(true);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1 className=\"App__title\">test app</h1>\n        <Gallery\n          images={images}\n          handleImage={handleImage}\n        />\n\n        {modalWindow && (\n          <Modal\n            modalImage={modalImage}\n            setModalWindow={setModalWindow}\n            getComments={getComments}\n            comments={comments}\n          />\n        )}\n      </div>\n\n      <footer className=\"App__footer footer\">\n        <div className=\"footer__line\" />\n        <p className=\"footer__text\">&copy; 2018-2019</p>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}